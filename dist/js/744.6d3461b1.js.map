{"version":3,"file":"js/744.6d3461b1.js","mappings":"kJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,eAA6B,MAAbN,EAAIO,MAAeH,EAAG,MAAM,CAACJ,EAAIM,GAAG,gBAAgBF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAME,SAAST,EAAIM,GAAG,QAAQF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAMG,MAAMC,OAAOX,EAAIM,GAAG,KAAKF,EAAG,WAAW,CAACQ,GAAG,CAAC,MAAQZ,EAAIa,OAAO,CAACb,EAAIM,GAAG,UAAUN,EAAIc,GAAIC,OAAOC,QAAQhB,EAAIiB,eAAe,SAASC,EAAKC,GAAK,OAAOf,EAAG,MAAM,CAACgB,IAAID,GAAK,CAACnB,EAAIM,GAAG,OAAON,EAAIQ,GAAGU,EAAK,IAAI,MAAMd,EAAG,MAAMJ,EAAIM,GAAG,IAAIN,EAAIQ,GAAGU,EAAK,IAAI,OAAOd,EAAG,MAAyB,iBAAXc,EAAK,GAAgBd,EAAG,WAAW,CAACQ,GAAG,CAAC,MAAQ,SAASS,GAAQ,OAAOrB,EAAIsB,IAAIJ,MAAS,CAAClB,EAAIM,GAAG,SAASN,EAAIuB,KAAKnB,EAAG,WAAW,CAACQ,GAAG,CAAC,MAAQ,SAASS,GAAQ,OAAOrB,EAAIwB,KAAKN,MAAS,CAAClB,EAAIM,GAAG,UAAUF,EAAG,WAAW,CAACQ,GAAG,CAAC,MAAQ,SAASS,GAAQ,OAAOrB,EAAIyB,IAAIP,MAAS,CAAClB,EAAIM,GAAG,UAAU,OAAM,GAAGF,EAAG,MAAM,CAACJ,EAAIM,GAAG,2DAA2DF,EAAG,IAAI,CAACsB,MAAM,CAAC,KAAO,+CAA+C,OAAS,WAAW,CAAC1B,EAAIM,GAAG,kBACx+BqB,EAAkB,GCgCtB,GACElB,KAAM,WACNmB,OACE,MAAO,CACLX,aAAc,GAGdY,WAANA,OAIEC,QAAFA,CACIR,IAAIS,GACFC,QAAQP,IAAIM,GACZ,IAAIE,EAAMhC,KACNiC,EAAOH,EAAE,GAAG,MAAQA,EAAE,GAAG,KAAK,KAClC9B,KAAKkC,KAAKb,IAAIY,GAAMtB,IAAG,SAA7B,GAEQoB,QAAQP,IAAIP,GACZe,EAAIhB,aAAeC,MAkBvBM,KAAKO,GACHC,QAAQP,IAAIM,GACZ,IAAIG,EAAOH,EAAE,GAAG,MAAQA,EAAE,GAAG,KAC7B9B,KAAKkC,KAAKb,IAAIY,GAAMV,KAAK,IAE3BX,OACEZ,KAAKgB,aAAe,GACpBe,QAAQP,IAAI,kBAAmBxB,KAAKM,MAAME,KAAMR,KAAKM,OACrDN,KAAK4B,WAAa5B,KAAKkC,KAAKb,IAAIrB,KAAKM,MAAME,MAC3C,IAAIA,EAAO,KAAjB,WACUwB,EAAMhC,KACVA,KAAK4B,WAAWO,MAAMxB,IAAG,SAA/B,KACQoB,QAAQP,IAAI,iBAApBO,EAAAA,GACQC,EAAIhB,aAAaG,GAAOF,MAG5BO,IAAIP,GACFc,QAAQP,IAAIP,EAAMjB,KAAKkC,QAG3BE,MAAFA,CACI9B,QACEyB,QAAQP,IAAIxB,KAAKM,OACjBN,KAAKY,SAGTyB,SAAFA,CACI/B,MAAJA,CACMe,MAAN,oCACMiB,WCnGuQ,I,UCOzQC,GAAY,OACd,EACAzC,EACA4B,GACA,EACA,KACA,KACA,MAIF,EAAea,EAAiB","sources":["webpack://dev/./src/components/worlds/GunWorld.vue?d230","webpack://dev/src/components/worlds/GunWorld.vue","webpack://dev/./src/components/worlds/GunWorld.vue?cf77","webpack://dev/./src/components/worlds/GunWorld.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" Gun World \"),(_vm.brain != null)?_c('div',[_vm._v(\" Working on \"),_c('b',[_vm._v(_vm._s(_vm.brain.name))]),_vm._v(\" in \"),_c('b',[_vm._v(_vm._s(_vm.brain.world.id))]),_vm._v(\" \"),_c('b-button',{on:{\"click\":_vm.root}},[_vm._v(\"root\")]),_vm._l((Object.entries(_vm.brainContent)),function(node,idx){return _c('div',{key:idx},[_vm._v(\" -- \"+_vm._s(node[0])+\" :\"),_c('br'),_vm._v(\" \"+_vm._s(node[1])+\" //\"),_c('br'),(typeof node[1] == 'object')?_c('b-button',{on:{\"click\":function($event){return _vm.get(node)}}},[_vm._v(\"get\")]):_vm._e(),_c('b-button',{on:{\"click\":function($event){return _vm.back(node)}}},[_vm._v(\"back\")]),_c('b-button',{on:{\"click\":function($event){return _vm.log(node)}}},[_vm._v(\"log\")])],1)})],2):_c('div',[_vm._v(\" Try to type the command `brain test`, or `brain my` \")]),_c('a',{attrs:{\"href\":\"https://gunjs.herokuapp.com/basic/paste.html\",\"target\":\"_blank\"}},[_vm._v(\"Test page\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    Gun World\n    <div v-if=\"brain != null\">\n      Working on <b>{{brain.name}}</b> in <b>{{brain.world.id}}</b> <b-button @click=\"root\">root</b-button>\n\n    <div v-for=\"(node, idx) in Object.entries(brainContent)\" :key=\"idx\">\n      --  {{ node[0] }} :<br>\n\n       {{node[1]}} //<br>\n       <!-- <b>UNDERSCORE</b>{{node[1]['_']}}<br>\n       <b>DIESE</b> {{node[1]['_']['#']}}<br> -->\n\n      <b-button @click=\"get(node)\" v-if=\"typeof node[1] == 'object'\">get</b-button>\n      <b-button @click=\"back(node)\">back</b-button>\n      <b-button @click=\"log(node)\">log</b-button>\n    </div>\n\n\n\n\n    <!-- {{ brain}} -->\n  </div>\n  <div v-else>\n    Try to type the command `brain test`, or `brain my`\n  </div>\n  <a href=\"https://gunjs.herokuapp.com/basic/paste.html\" target=\"_blank\">Test page</a>\n\n</div>\n</template>\n\n<script>\n// import {Brain } from '@/neurone-factory'\nexport default {\n  name: \"GunWorld\",\n  data(){\n    return {\n      brainContent: {},\n      // input: {value: null, type: null},\n      // types: [\"object\", \"string\", \"number\", \"boolean\", \"null\" ],\n      brain_node : null,\n\n    }\n  },\n  methods:{\n    get(n){\n      console.log(n)\n      let app = this\n      let path = n[1]['#'] || n[1]['_']['#']\n      this.$gun.get(path).on(function(node){\n        // render it, but only once. No updates.\n        console.log(node)\n        app.brainContent = node\n      })\n\n      // let company = this.$gun.get('startup').put({\n      //   name: \"hype\",\n      //   profitable: false,\n      //   address: {\n      //     street: \"123 Hipster Lane\",\n      //     city: \"San Francisco\",\n      //     state: \"CA\",\n      //     country: \"USA\"\n      //   }\n      // });\n      //\n      // company.once(function(startup){\n      //   console.log(\"The startup:\", startup);\n      // });\n    },\n    back(n){\n      console.log(n)\n      let path = n[1]['_'] || n[1]['#']\n      this.$gun.get(path).back(1)\n    },\n    root(){\n      this.brainContent = {}\n      console.log(\"subscribing to \", this.brain.name, this.brain)\n      this.brain_node = this.$gun.get(this.brain.name)\n      let name =  this.brain.name\n      let app = this\n      this.brain_node.map().on(function(node, key){\n        console.log('Subscribed to ',name, node);\n        app.brainContent[key] = node\n      })\n    },\n    log(node){\n      console.log(node, this.$gun)\n    }\n  },\n  watch:{\n    brain(){\n      console.log(this.brain)\n      this.root()\n    }\n  },\n  computed:{\n    brain:{\n      get () { return this.$store.state.app.brain },\n      set (/*value*/) { }\n    },\n  },\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GunWorld.vue?vue&type=template&id=01cf310a&\"\nimport script from \"./GunWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./GunWorld.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","brain","_s","name","world","id","on","root","_l","Object","entries","brainContent","node","idx","key","$event","get","_e","back","log","attrs","staticRenderFns","data","brain_node","methods","n","console","app","path","$gun","map","watch","computed","set","component"],"sourceRoot":""}