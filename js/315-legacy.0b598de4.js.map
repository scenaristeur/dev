{"version":3,"file":"js/315-legacy.0b598de4.js","mappings":"kJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,mBAAiC,MAAbN,EAAIO,MAAeH,EAAG,MAAM,CAACJ,EAAIM,GAAG,gBAAgBF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAME,SAAST,EAAIM,GAAG,QAAQF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAMG,MAAMC,SAASX,EAAIY,KAAKR,EAAG,iBAAiB,CAACS,MAAM,CAAC,MAAQb,EAAIc,MAAM,MAAQd,EAAIe,UAAU,IACzWC,EAAkB,GC6BtB,G,gEAAA,CACEP,KAAM,aACNQ,WAAY,CACV,eAAkB,WAAtB,sCAEEC,KALF,WAMI,MAAJ,IAKEC,QAAFA,CACIC,WADJ,SACAF,GACM,IAAN,MACMG,EAAcpB,KAAKqB,cAAcJ,EAAKK,MAAMC,SAC5CvB,KAAKwB,SAASJ,GACdK,EAAazB,KAAKqB,cAAcJ,EAAKK,MAAMI,QAC3C1B,KAAKwB,SAASC,GACdE,QAAQC,IAAIR,EAAYV,GAAIe,EAAWf,IACvCmB,EAAO7B,KAAK8B,cAAc,CAAhCC,OAAAA,EAAAA,GAAAC,OAAAA,EAAAA,GAAAC,MAAAA,EAAAA,MAAAA,YACMN,QAAQC,IAAIC,GACZ7B,KAAKkC,SAASL,GACdZ,EAAKkB,OAAS,CAApBZ,QAAAA,EAAAM,KAAAA,EAAAH,OAAAA,IAGIF,SAdJ,SAcAY,GACM,IAAIC,EAAQrC,KAAKa,MAAMyB,WAAU,SAAvC,yBACiB,IAAXD,EAAerC,KAAKa,MAAM0B,KAAKH,GAAKI,OAAOC,OAAOzC,KAAKa,MAAMwB,GAAQD,IAGvEF,SAnBJ,SAmBAQ,GACMf,QAAQC,IAAIc,GACZf,QAAQC,IAAI5B,KAAKc,OACjBd,KAAKc,MAAMyB,KAAKG,GAGhBf,QAAQC,IAAI5B,KAAKa,MAAOb,KAAKc,QAS/BO,cAlCJ,SAkCAY,GACM,IAAN,oCACM,MAAO,CAAbvB,GAAAA,EAAAF,KAAAA,EAAAmC,IAAAA,EACQC,KAAM,YAEV,cAvCJ,SAuCA3B,GAEM,OADA,QAANU,IAAAA,GACA,CAAQ,OAARI,EAAAA,OAAQ,OAARC,EAAAA,OAAQ,MAARC,EAAAA,SAGEY,MAAFA,CACIC,YADJ,WAGM,OADAnB,QAAQC,IAAI5B,KAAK8C,aACT9C,KAAK8C,YAAYF,MACvB,IAAK,UACb,kCACA,MACQ,IAAK,MACbjB,QAAAA,IAAAA,KAAAA,YAAAA,KACA,MACQ,QACRA,QAAAA,IAAAA,OAAAA,KAAAA,gBAIEoB,SAAFA,CACIlC,MAAJA,CACMmC,IADN,WACA,kFACMC,IAFN,cAIInC,MAAJA,CACMkC,IADN,WACA,kFACMC,IAFN,cAII3C,MAAJA,CACM0C,IADN,WACA,oCACMC,IAFN,cAIIH,YAAJA,CACME,IADN,WACA,yCACMC,IAFN,iBCjH+Q,I,UCO3QC,GAAY,OACd,EACApD,EACAiB,GACA,EACA,KACA,KACA,MAIF,EAAemC,EAAiB","sources":["webpack://dev/./src/components/worlds/GraphWorld.vue?4ecd","webpack://dev/src/components/worlds/GraphWorld.vue","webpack://dev/./src/components/worlds/GraphWorld.vue?9609","webpack://dev/./src/components/worlds/GraphWorld.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" Graph World ! \"),(_vm.brain != null)?_c('div',[_vm._v(\" Working on \"),_c('b',[_vm._v(_vm._s(_vm.brain.name))]),_vm._v(\" in \"),_c('b',[_vm._v(_vm._s(_vm.brain.world.id))])]):_vm._e(),_c('GraphComponent',{attrs:{\"nodes\":_vm.nodes,\"links\":_vm.links}})],1)}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    Graph World !\n    <div v-if=\"brain != null\">\n      Working on <b>{{brain.name}}</b> in <b>{{brain.world.id}}</b>\n    </div>\n    <GraphComponent :nodes=\"nodes\" :links=\"links\" />\n    <!-- <b-button-toolbar aria-label=\"Toolbar with button groups and dropdown menu\">\n    <b-button-group class=\"mx-1\">\n  </b-button-group>\n  <b-dropdown class=\"mx-1\" right text=\"New\">\n  <b-dropdown-item>graph</b-dropdown-item>\n  <b-dropdown-item>node</b-dropdown-item>\n  <b-dropdown-item>link</b-dropdown-item>\n</b-dropdown>\n\n<b-button>Edit</b-button>\n<b-button>Undo</b-button>\n\n<b-button-group class=\"mx-1\">\n<b-button>Save</b-button>\n<b-button>Cancel</b-button>\n</b-button-group>\n</b-button-toolbar> -->\n\n</div>\n</template>\n\n<script>\n\nexport default {\n  name: \"GraphWorld\",\n  components: {\n    'GraphComponent': ()=>import('@/components/worlds/graph/GraphComponent'),\n  },\n  data(){\n    return{\n      // nodes: [],\n      // links: [],\n    }\n  },\n  methods:{\n    addTriplet(data){\n            let nodeSubject, nodeObject, edge\n      nodeSubject = this.nodeFromLabel(data.value.subject)\n      this.saveNode(nodeSubject)\n      nodeObject = this.nodeFromLabel(data.value.object)\n      this.saveNode(nodeObject)\n      console.log(nodeSubject.id, nodeObject.id)\n      edge = this.edgeFromLabel({source: nodeSubject.id, target: nodeObject.id, label: data.value.predicate})\n      console.log(edge)\n      this.saveEdge(edge)\n      data.triple = {subject: nodeSubject, edge: edge, object: nodeObject}\n      //this.$saveToGun(data)\n    },\n    saveNode(n){\n      var index = this.nodes.findIndex(x => x.id==n.id);\n      index === -1 ? this.nodes.push(n) : Object.assign(this.nodes[index], n)\n      //this.sendUpdate(n)\n    },\n    saveEdge(e){\n      console.log(e)\n      console.log(this.links)\n      this.links.push(e)\n      //  var index = this.links.findIndex(x => x.id==e.id);\n      //index === -1 ? this.links.push(e) : Object.assign(this.links[index], e)\n      console.log(this.nodes, this.links)\n    //  this.sendUpdate(e)\n    },\n    // nodeFromLabelVis(label) {\n    //   return {id: \"#\"+label.trim().split(' ').join('_'),\n    //   label: label,\n    //   color: {  background: '#D2E5FF', border: '#2B7CE9'},\n    //   shape: 'ellipse'}\n    // },\n    nodeFromLabel(label) {\n      let id = \"#\"+label.trim().split(' ').join('_')\n      return {id: id , name: label,   age: 0,\n        type: \"neurone\"/*, color: \"#D2E5FF\"*//*, type: \"storage\"*/}\n      },\n      edgeFromLabel(data){\n        console.log(data)\n        return { source: data.source, target: data.target, label: data.label}\n      },\n  },\n  watch:{\n    lastCommand(){\n      console.log(this.lastCommand)\n      switch (this.lastCommand.type) {\n        case 'triplet':\n        this.addTriplet(this.lastCommand)\n        break;\n        case 'url':\n        console.log(this.lastCommand.url)\n        break;\n        default:\n        console.log(\"TODO\",this.lastCommand)\n      }\n    }\n  },\n  computed:{\n    nodes:{\n      get () { return this.$store.state.app.brain == null ? [] : this.$store.state.app.brain.neurones },\n      set (/*value*/) { /*this.$store.commit('app/setBrain', value)*/ }\n    },\n    links:{\n      get () { return this.$store.state.app.brain == null ? [] : this.$store.state.app.brain.synapses },\n      set (/*value*/) { /*this.$store.commit('app/setBrain', value)*/ }\n    },\n    brain:{\n      get () { return this.$store.state.app.brain },\n      set (/*value*/) { /*this.$store.commit('app/setBrain', value)*/ }\n    },\n    lastCommand:{\n      get () { return this.$store.state.os.lastCommand },\n      set (/*value*/) { /*this.$store.commit('app/setBrain', value)*/ }\n    }\n  },\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GraphWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GraphWorld.vue?vue&type=template&id=4048a9dd&\"\nimport script from \"./GraphWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./GraphWorld.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","brain","_s","name","world","id","_e","attrs","nodes","links","staticRenderFns","components","data","methods","addTriplet","nodeSubject","nodeFromLabel","value","subject","saveNode","nodeObject","object","console","log","edge","edgeFromLabel","source","target","label","saveEdge","triple","n","index","findIndex","push","Object","assign","e","age","type","watch","lastCommand","computed","get","set","component"],"sourceRoot":""}