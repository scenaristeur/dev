{"version":3,"file":"js/556.6ac74440.js","mappings":"kJAAA,IAAIA,EAAS,WAAa,IAAIC,EAAIC,KAASC,EAAGF,EAAIG,eAAmBC,EAAGJ,EAAIK,MAAMD,IAAIF,EAAG,OAAOE,EAAG,MAAM,CAACJ,EAAIM,GAAG,eAA6B,MAAbN,EAAIO,MAAeH,EAAG,MAAM,CAACJ,EAAIM,GAAG,gBAAgBF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAME,SAAST,EAAIM,GAAG,QAAQF,EAAG,IAAI,CAACJ,EAAIM,GAAGN,EAAIQ,GAAGR,EAAIO,MAAMG,MAAMC,OAAOX,EAAIY,GAAIC,OAAOC,QAAQd,EAAIe,eAAe,SAASC,EAAKC,GAAK,OAAOb,EAAG,MAAM,CAACc,IAAID,GAAK,CAACjB,EAAIM,GAAG,OAAON,EAAIQ,GAAGQ,EAAK,IAAI,MAAMhB,EAAIQ,GAAGQ,EAAK,IAAI,KAAKZ,EAAG,WAAW,CAACe,GAAG,CAAC,MAAQ,SAASC,GAAQ,OAAOpB,EAAIqB,OAAOL,MAAS,CAAChB,EAAIM,GAAG,aAAa,MAAKF,EAAG,MAAMA,EAAG,MAAMJ,EAAIM,GAAG,IAAIN,EAAIQ,GAAGR,EAAIO,MAAMe,MAAM,KAAKlB,EAAG,MAAMJ,EAAIM,GAAG,IAAIN,EAAIQ,GAAGR,EAAIO,OAAO,MAAM,GAAGH,EAAG,MAAM,CAACJ,EAAIM,GAAG,2DAA2DF,EAAG,IAAI,CAACmB,MAAM,CAAC,KAAO,+CAA+C,OAAS,WAAW,CAACvB,EAAIM,GAAG,kBAC7xBkB,EAAkB,GCuCtB,GACEf,KAAM,WACNa,OACE,MAAO,CACLP,aAAc,KAGlBU,QAAFA,CACIJ,OAAOK,GACLC,QAAQC,IAAIF,GACZzB,KAAK4B,KAAKC,IAAIJ,EAAE,IAAIK,MAAK,SAA/B,GAEQJ,QAAQC,IAAIZ,QAwBlBgB,MAAFA,CACIzB,QACEN,KAAKc,aAAe,GACpBY,QAAQC,IAAI,kBAAmB3B,KAAKM,MAAME,KAAMR,KAAKM,OACrD,IAAI0B,EAAYhC,KAAK4B,KAAKC,IAAI7B,KAAKM,MAAME,MACrCA,EAAO,KAAjB,WACUyB,EAAMjC,KACVgC,EAAUd,IAAG,SAAnBc,GACQN,QAAQC,IAAI,iBAApBD,EAAAA,GACQO,EAAInB,aAAeC,OAIzBmB,SAAFA,CACI5B,MAAJA,CACMuB,MAAN,oCACMM,WC5FuQ,I,UCOzQC,GAAY,OACd,EACAtC,EACAyB,GACA,EACA,KACA,KACA,MAIF,EAAea,EAAiB","sources":["webpack://dev/./src/components/worlds/GunWorld.vue?8a35","webpack://dev/src/components/worlds/GunWorld.vue","webpack://dev/./src/components/worlds/GunWorld.vue?cf77","webpack://dev/./src/components/worlds/GunWorld.vue"],"sourcesContent":["var render = function () {var _vm=this;var _h=_vm.$createElement;var _c=_vm._self._c||_h;return _c('div',[_vm._v(\" Gun World \"),(_vm.brain != null)?_c('div',[_vm._v(\" Working on \"),_c('b',[_vm._v(_vm._s(_vm.brain.name))]),_vm._v(\" in \"),_c('b',[_vm._v(_vm._s(_vm.brain.world.id))]),_vm._l((Object.entries(_vm.brainContent)),function(node,idx){return _c('div',{key:idx},[_vm._v(\" -- \"+_vm._s(node[0])+\" : \"+_vm._s(node[1])+\" \"),_c('b-button',{on:{\"click\":function($event){return _vm.follow(node)}}},[_vm._v(\"Follow\")])],1)}),_c('hr'),_c('hr'),_vm._v(\" \"+_vm._s(_vm.brain.data)+\" \"),_c('hr'),_vm._v(\" \"+_vm._s(_vm.brain)+\" \")],2):_c('div',[_vm._v(\" Try to type the command `brain test`, or `brain my` \")]),_c('a',{attrs:{\"href\":\"https://gunjs.herokuapp.com/basic/paste.html\",\"target\":\"_blank\"}},[_vm._v(\"Test page\")])])}\nvar staticRenderFns = []\n\nexport { render, staticRenderFns }","<template>\n  <div>\n    Gun World\n    <div v-if=\"brain != null\">\n      Working on <b>{{brain.name}}</b> in <b>{{brain.world.id}}</b>\n\n      <!-- <div v-if=\"brainContent['_'] != undefined\">\n      <hr>\n      Content : {{ brainContent}}\n      <hr>\n      underscore    {{ brainContent[\"_\"]}}\n      <hr>\n      diese    {{ brainContent[\"_\"]['#']}}\n      <hr>\n      superier  {{ brainContent[\"_\"][\">\"]}}\n      <hr>\n\n    </div> -->\n    <div v-for=\"(node, idx) in Object.entries(brainContent)\" :key=\"idx\">\n      --  {{ node[0] }} : {{node[1]}} <b-button @click=\"follow(node)\">Follow</b-button>\n    </div>\n\n\n\n    <hr>\n    <hr>\n    {{brain.data}}\n    <hr>\n    {{ brain}}\n  </div>\n  <div v-else>\n    Try to type the command `brain test`, or `brain my`\n  </div>\n  <a href=\"https://gunjs.herokuapp.com/basic/paste.html\" target=\"_blank\">Test page</a>\n\n</div>\n</template>\n\n<script>\n// import {Brain } from '@/neurone-factory'\nexport default {\n  name: \"GunWorld\",\n  data(){\n    return {\n      brainContent: {}\n    }\n  },\n  methods:{\n    follow(n){\n      console.log(n)\n      this.$gun.get(n[1]).once(function(node){\n        // render it, but only once. No updates.\n        console.log(node)\n      })\n\n\n    }\n    // process(c){\n    //   console.log(c)\n    //   // let brain = new Brain()\n    //   // switch (c.command) {\n    //   //   case \"brain\":\n    //   //\n    //   //   if (c.array[1] != undefined){\n    //   //     brain.name = c.array[1]\n    //   //\n    //   //   }else{\n    //   //     brain.name = prompt(\"Please choose a brain name\");\n    //   //   }\n    //   //   console.log(brain)\n    //   //   break;\n    //   //   default:\n    //   //\n    //   // }\n    // }\n  },\n  watch:{\n    brain(){\n      this.brainContent = {}\n      console.log(\"subscribing to \", this.brain.name, this.brain)\n      let brain_sub = this.$gun.get(this.brain.name)\n      let name =  this.brain.name\n      let app = this\n      brain_sub.on(function(node){\n        console.log('Subscribed to ',name, node);\n        app.brainContent = node\n      })\n    }\n  },\n  computed:{\n    brain:{\n      get () { return this.$store.state.app.brain },\n      set (/*value*/) { }\n    },\n  },\n}\n</script>\n\n<style>\n\n</style>\n","import mod from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunWorld.vue?vue&type=script&lang=js&\"; export default mod; export * from \"-!../../../node_modules/thread-loader/dist/cjs.js!../../../node_modules/babel-loader/lib/index.js??clonedRuleSet-40[0].rules[0].use[1]!../../../node_modules/@vue/vue-loader-v15/lib/index.js??vue-loader-options!./GunWorld.vue?vue&type=script&lang=js&\"","import { render, staticRenderFns } from \"./GunWorld.vue?vue&type=template&id=03472c0c&\"\nimport script from \"./GunWorld.vue?vue&type=script&lang=js&\"\nexport * from \"./GunWorld.vue?vue&type=script&lang=js&\"\n\n\n/* normalize component */\nimport normalizer from \"!../../../node_modules/@vue/vue-loader-v15/lib/runtime/componentNormalizer.js\"\nvar component = normalizer(\n  script,\n  render,\n  staticRenderFns,\n  false,\n  null,\n  null,\n  null\n  \n)\n\nexport default component.exports"],"names":["render","_vm","this","_h","$createElement","_c","_self","_v","brain","_s","name","world","id","_l","Object","entries","brainContent","node","idx","key","on","$event","follow","data","attrs","staticRenderFns","methods","n","console","log","$gun","get","once","watch","brain_sub","app","computed","set","component"],"sourceRoot":""}